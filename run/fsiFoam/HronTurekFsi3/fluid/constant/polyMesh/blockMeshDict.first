/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.0                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
   (0 0 0)             //0
   (129.289 0 0)       //1
   (270.7106 0 0)      //2
   (600 0 0)           //3
   (2500 0 0)          //4
   (0 129.289 0)       //5
   (129.289 129.289 0) //6
   (270.7106 129.289 0)//7
   (600 129.289 0)     //8
   (2500 129.289 0)    //9
   (164.6447 164.6447 0)//10
   (235.3553 164.6447 0)//11
   (248.9898 190 0)     //12
   (299.4987 190 0)      //13
   (600 190 0)          //14
   (2500 190 0)         //15
   (164.6447 235.355 0) //16
   (235.3553 235.355 0) //17
   (248.9898 210 0)     //18
   (299.4987 210 0)      //19
   (600 210 0)          //20
   (2500 210 0)         //21
   (0 270.7107 0)       //22
   (129.289 270.7107 0) //23
   (270.7106 270.7107 0)//24
   (600 270.7107 0)     //25
   (2500 270.7107 0)    //26
   (0 410 0)            //27
   (129.289 410 0)      //28
   (270.7106 410 0)     //29
   (600 410 0)          //30
   (2500 410 0)         //31

   (0 0 0.05067)             //32
   (129.289 0 0.05067)       //33
   (270.7106 0 0.05067)      //34
   (600 0 0.05067)           //35
   (2500 0 0.05067)          //36
   (0 129.289 0.05067)       //37
   (129.289 129.289 0.05067) //38
   (270.7106 129.289 0.05067)//39
   (600 129.289 0.05067)     //40
   (2500 129.289 0.05067)    //41
   (164.6447 164.6447 0.05067)//42
   (235.3553 164.6447 0.05067)//43
   (248.9898 190 0.05067)     //44
   (299.4987 190 0.05067)      //45
   (600 190 0.05067)          //46
   (2500 190 0.05067)         //47
   (164.6447 235.355 0.05067) //48
   (235.3553 235.355 0.05067) //49
   (248.9898 210 0.05067)     //50
   (299.4987 210 0.05067)      //51
   (600 210 0.05067)          //52
   (2500 210 0.05067)         //53
   (0 270.7107 0.05067)       //54
   (129.289 270.7107 0.05067) //55
   (270.7106 270.7107 0.05067)//56
   (600 270.7107 0.05067)     //57
   (2500 270.7107 0.05067)    //58
   (0 410 0.05067)            //59
   (129.289 410 0.05067)      //60
   (270.7106 410 0.05067)     //61
   (600 410 0.05067)          //62
   (2500 410 0.05067)         //63

   (1000 0 0)                 //64
   (1000 129.289 0)           //65
   (1000 190 0)               //66
   (1000 210 0)               //67
   (1000 270.7107 0)            //68
   (1000 410 0)               //69

   (1000 0 0.05067)                 //70
   (1000 129.289 0.05067)           //71
   (1000 190 0.05067)               //72
   (1000 210 0.05067)               //73
   (1000 270.7107 0.05067)          //74
   (1000 410 0.05067)               //75

);

blocks
(
    hex (0 1 6 5 32 33 38 37) (24 24 1) simpleGrading (1 1 1)
    hex (1 2 7 6 33 34 39 38) (30 24 1) simpleGrading (1 1 1)
    hex (2 3 8 7 34 35 40 39) (60 24 1) simpleGrading (1 1 1)
    hex (3 64 65 8 35 70 71 40) (70 24 1) simpleGrading (1 1 1)
    hex (64 4 9 65 70 36 41 71) (50 24 1) simpleGrading (10 1 1)
    hex (5 6 23 22 37 38 55 54) (24 30 1) simpleGrading (1 1 1)
    hex (6 10 16 23 38 42 48 55) (22 30 1) simpleGrading (0.5 1 1)
    hex (6 7 11 10 38 39 43 42) (30 22 1) simpleGrading (1 0.5 1)
    hex (7 13 12 11 39 45 44 43) (15 22 1) simpleGrading (1 0.5 1)
    hex (7 8 14 13 39 40 46 45) (60 15 1) simpleGrading (1 1 1)
    hex (8 65 66 14 40 71 72 46) (70 15 1) simpleGrading (1 1 1)
    hex (65 9 15 66 71 41 47 72) (50 15 1) simpleGrading (10 1 1)
    hex (16 17 24 23 48 49 56 55) (30 22 1) simpleGrading (1 2 1)
    hex (17 18 19 24 49 50 51 56) (15 22 1) simpleGrading (1 2 1)
    hex (19 20 25 24 51 52 57 56) (60 15 1) simpleGrading (1 1 1)
    hex (20 67 68 25 52 73 74 57) (70 15 1) simpleGrading (1 1 1)
    hex (67 21 26 68 73 53 58 74) (50 15 1) simpleGrading (10 1 1)
    hex (22 23 28 27 54 55 60 59) (24 26 1) simpleGrading (1 1 1)
    hex (23 24 29 28 55 56 61 60) (30 26 1) simpleGrading (1 1 1)
    hex (24 25 30 29 56 57 62 61) (60 26 1) simpleGrading (1 1 1)
    hex (25 68 69 30 57 74 75 62) (70 26 1) simpleGrading (1 1 1)
    hex (68 26 31 69 74 58 63 75) (50 26 1) simpleGrading (10 1 1)
    hex (14 66 67 20 46 72 73 52) (70 4 1) simpleGrading (1 1 1)
    hex (66 15 21 67 72 47 53 73) (50 4 1) simpleGrading (10 1 1)
);

edges
(
    arc 23 24 (200 300 0)
    arc 55 56 (200 300 0.05067) 

    arc 16 17 (200 250 0)
    arc 48 49 (200 250 0.05067) 

    arc 6 7 (200 100 0)
    arc 38 39 (200 100 0.05067) 

    arc 10 11 (200 150 0)
    arc 42 43 (200 150 0.05067) 

    arc 6 23 (100 200 0)
    arc 38 55 (100 200 0.05067)

    arc 10 16 (150 200 0)
    arc 42 48 (150 200 0.05067)

    arc 17 18 (243.301 225 0)
    arc 49 50 (243.301 225 0.05067) 

    arc 24 19 (286.6025 250 0)
    arc 56 51 (286.6025 250 0.05067) 

    arc 11 12 (243.301 175 0)
    arc 43 44 (243.301 175 0.05067) 

    arc 13 7  (286.6025 150 0)
    arc 45 39 (286.6025 150 0.05067) 

);

patches
(
     patch plate
     (
         (19 18 50 51)
	 (12 13 45 44)
         (20 19 51 52)
	 (13 14 46 45)
	 (20 52 46 14)
     )

     patch outlet
     (
         (63 31 26 58)
	 (58 26 21 53)
	 (53 21 15 47)
	 (47 15 9 41)
	 (41 9 4 36)
     )

     patch inlet
     (
         (27 59 54 22)
	 (22 54 37 5)
	 (5 37 32 0)
     )

     patch cylinder
     (
         (16 48 49 17)
	 (17 49 50 18)
	 (10 42 48 16)
	 (11 43 42 10)
	 (12 44 43 11)
     )

     patch bottom
     (
         (1 0 32 33)
         (2 1 33 34)
         (3 2 34 35)
         (64 3 35 70)
         (4 64 70 36)
     )

     patch top
     (
         (27 28 60 59)
	 (28 29 61 60)
	 (29 30 62 61)
	 (30 69 75 62)
	 (69 31 63 75)
     )

     empty frontAndBackPlanes
     (
         (22 23 28 27)
	 (23 24 29 28)
	 (24 25 30 29)
	 (25 68 69 30)
	 (68 26 31 69)
	 (5 6 23 22)
	 (6 10 16 23)
	 (16 17 24 23)
	 (18 19 24 17)
	 (19 20 25 24)
	 (20 67 68 25)
	 (67 21 26 68)
	 (6 7 11 10)
	 (7 13 12 11)
	 (7 8 14 13)
	 (8 65 66 14)
	 (65 9 15 66)
	 (0 1 6 5)
	 (1 2 7 6)
	 (2 3 8 7)
	 (3 64 65 8)
	 (64 4 9 65)
	 (14 66 67 20)
	 (66 15 21 67)

	 (33 32 37 38)
	 (34 33 38 39)
	 (35 34 39 40)
	 (70 35 40 71)
	 (36 70 71 41)
	 (38 37 54 55)
	 (42 38 55 48)
	 (39 38 42 43)
	 (45 39 43 44)
	 (40 39 45 46)
	 (71 40 46 72)
	 (41 71 72 47)
	 (49 48 55 56)
	 (51 50 49 56)
	 (52 51 56 57)
	 (73 52 57 74)
	 (53 73 74 58)
	 (55 54 59 60)
	 (56 55 60 61)
	 (57 56 61 62)
	 (74 57 62 75)
	 (58 74 75 63)
	 (72 46 52 73)
	 (47 72 73 53)
     )

);

mergePatchPairs
(
);

// ************************************************************************* //
